
CONTENTS OF THIS FILE
=====================
   
 * Introduction
 * How to Compile and Run
 * How to Use
 * Sourced Referred
 * Key bindings
 * TODO


INTRODUCTION
============
	
	This is an OpenGL application written using C++, to demonstrate plotting of curves for below mentioned two algorithms
	1. Lagrange Interpolation Polynomial
	2. Bezier Curve
	
	* Features supported
	  ------------------
	  
		- Adding control points
		- Deleting control points
		- Scaling
		- Rotation
		- Translation


HOW TO COMPILE AND RUN
======================
	
	- Compile in non-debug mode	  
	  $make
	- Compile in debug mode
	  $make CFLAGS='-D DEBUG'
	  
	This will generate an executable 'curves' in same directory
	Execute bellow command to run
	$./curves  
	
	
HOW TO USE
==========
	
	This application supports following modes
	1. VERTEX MODE
	2. CURVE MODE
	
	Use ENTER key to switch between VERTEX MODE and CURVE MODE
	
	* VERTEX MODE
	  -----------
	  
	  This is by default mode when application starts. In this mode only control points will get rendered on screen.
	  - use LEFT MOUSE BUTTON to insert points
	  - use RIGHT MOUSE BUTTON to delete points
	  
	  Order of points in which it is added matters. Always add points in increasing/decreasing value of X.
	  For Lagrange curve there should not be any two points with same X values
	  
	  In this mode other transformation operations like scaling, rotation and translation will not work 
	 
	* CURVE MODE
	  ----------
	  
	  In this mode two curves(Lagrange and Bezier) will get rendered on screen. Below are supported operations on curves
	  
	  1. Translation: Use UP/DOWN key to translate curves. Use following keys to change direction of translation
		- 'h': Along X-Axis(Horizontally)
		- 'v': Along Y-Axis(Vertically)
		- 'd': Uniform along both axis
		Also curve can be translated choosing two points uisng RIGHT MOUSE BUTTON. Curve will get translated by the distance
		between two points in world coordinate system. The direction(Positive or Negative) of X and Y will be chosen based on
		initial and final point
		
	  2. Scaling: Use '+' and '-' keys to scale up and scale down curve respectively. Curve will get scaled around initial vertex
	  
	  3. Rotation: Use 'r' and 'l' keys to rotate in right and left direction respectively

INPUT
=====

	Order of points matters. Always add points in increasing or decreasing value of x to get both the curves correct.
	Lagrange curve does not permit two points with same X value, so If above not followed in that case Lagrange curve will
	not be correct/not render on screen.
	
SOURCES REFERRED
================

	1. http://mathworld.wolfram.com/LagrangeInterpolatingPolynomial.html
	2. https://en.wikipedia.org/wiki/Lagrange_polynomial
	3. http://mathworld.wolfram.com/BezierCurve.html
	4. https://en.wikipedia.org/wiki/B%C3%A9zier_curve
	5. https://www.opengl.org/documentation/specs/glut/spec3/node1.html 


KEY BINDINGS
============

	1. VERTEX MODE
	   
		- ENTER KEY			: Switch from VERTEX MODE to CURVE MODE
		- LEFT MOUSE BUTTON	: Insert vertex
		- RIGHT MOUSE BUTTON: Delete existing vertex
	   
	2. CURVE MODE
	 
		- 'r'				: Rotate in right direction
		- 'l'				: Rotate in left direction
		- '+'				: Zoomin(Scale up) curve
		- '-'				: Zoomout(Scale down) curve
		- 'h'				: Set translation direction along X-Axis(Horizontally)
		- 'v'				: Set translation direction along Y-Axis(Vertically)
		- 'd'				: Set translation direction diagonally
		- UP KEY			: Translate in forward direction
		- DOWN KEY			: Translate in backward direction
		- RIGHT MOUSE BUTTON: Choose distance for translation(Choose two points)

TO DO
=====
	1. Picking & deleting points itself on curve
	2. Lagrange curve - Adding point anywhere in between(Use Min, Max based on x value)
